import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.hibernate.orm' version '6.4.2.Final'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.22'
    id 'com.github.gmazzo.buildconfig' version '5.3.5'
    id "org.jetbrains.kotlin.plugin.allopen" version "1.9.22"
}

group = 'com.krillsson'
version = '0.0.1-SNAPSHOT'

buildConfig {
    buildConfigField("String", "APP_VERSION", provider { "\"${project.version}\"" })
    buildConfigField("java.util.Date", "BUILD_TIME", "java.util.Date(" + System.currentTimeMillis() + "L)")
}

java {
    sourceCompatibility = '21'
}

allOpen {
    annotation("jakarta.persistence.Entity")
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

graalvmNative {
    binaries {
        //https://www.graalvm.org/latest/reference-manual/native-image/metadata/AutomaticMetadataCollection/#tracing-agent
        // -agentlib:native-image-agent=config-output-dir=META-INF/native-image
        main {
            buildArgs.add('--no-server')
            buildArgs.add('--no-fallback')
            buildArgs.add('--report-unsupported-elements-at-runtime')
            buildArgs.add('--initialize-at-run-time=com.sun.jna')
            buildArgs.add('--allow-incomplete-classpath')
            buildArgs.add('-H:+JNI')
            buildArgs.add('-H:+ReportExceptionStackTraces')
            buildArgs.add('-H:+PrintAnalysisCallTree')
            /**
            //https://graalvm.github.io/native-build-tools/latest/gradle-plugin.html#configuration-options
            buildArgs.add('--verbose')
            buildArgs.add("-H:ReflectionConfigurationFiles=$projectDir/conf/reflect-config.json")
            buildArgs.add("-H:DynamicProxyConfigurationFiles=$projectDir/conf/proxy-config.json")
            buildArgs.add("-H:JNIConfigurationFiles=$projectDir/conf/jni-config.json")
            buildArgs.add("-H:ResourceConfigurationFiles=$projectDir/conf/resource-config.json")
            buildArgs.add('-H:Log=registerResource')
             */
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf:thymeleaf-spring6:3.1.2.RELEASE'
    implementation('com.graphql-java-kickstart:playground-spring-boot-starter:11.1.0') {
        exclude group: "com.graphql-java-kickstart", module: "graphiql-spring-boot-starter"
        exclude group: "com.graphql-java-kickstart", module: "graphiql-spring-boot-autoconfigure"
    }
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects'
    implementation 'com.github.docker-java:docker-java-core:3.3.4'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.3.4'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'org.bitlet:weupnp:0.1.4'
    implementation 'org.jmdns:jmdns:3.5.1'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation('com.graphql-java-kickstart:graphql-java-tools:13.1.1') {
        exclude group: "org.slf4j"
    }
    implementation('com.graphql-java-kickstart:graphql-java-servlet:15.2.0') {
        exclude group: "org.slf4j"
    }
    implementation('com.github.oshi:oshi-core:6.4.12') {
        exclude group: "org.slf4j"
    }
    implementation name: 'jni4net.j-0.8.9.0', group: "net.sf.jni4net", version: "1"
    implementation name: 'OhmJniWrapper.j4n', group: "ohmwrapper", version: "1"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '21'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

