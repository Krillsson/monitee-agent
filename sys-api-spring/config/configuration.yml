#########################################
### System-Api configuration          ###
#########################################
metricsConfig:
  monitor:
    interval: 45
    unit: SECONDS
  history:
    interval: 30
    unit: MINUTES
    purging:
      olderThan: 14
      unit: DAYS
      purgeEvery: 1
      purgeEveryUnit: DAYS
  cache:
    enabled: false
    duration: 5
    unit: SECONDS
#processes:
#  enabled: true
user:
  username: user
  password: password
windows:
  enableOhmJniWrapper: true
  eventLog:
    enabled: true
  serviceManagement:
    enabled: true
linux:
  journalLogs:
    enabled: true
  systemDaemonServiceManagement:
    enabled: true
# web interface for running queries
graphQLPlayGround:
  enabled: false
# docker management and metrics support
docker:
  enabled: true
  #  cache:
  #    enabled: true
  #    duration: 2
  #    unit: SECONDS
  # uncomment if you'd like to manually specify docker host
  # host: unix:///var/run/docker.sock or unix:///run/podman/podman.sock
# resolve external IP and monitor internet connectivity
connectivityCheck:
  enabled: true
  address: https://ifconfig.me
updateCheck:
  enabled: true
  address: https://api.github.com
  user: krillsson
  repo: sys-api
# advertise service in local network for easier client setup
mDNS:
  enabled: true
upnp:
  enabled: true
forwardHttpToHttps: false
selfSignedCertificates:
  enabled: true
  ## automatically put external IP in CN
  populateCN: true
  ## automatically put internal IPs in SAN
  populateSAN: true
  ## manually populate CN and SAN below
  # commonName: sys-api.org
  # subjectAlternativeNames: [192.168.0.24, 10.8.0.24]
tasks:
  often:
    interval: 5s
    perform: [ RecordCpuLoad, RecordNetworkUploadDownloadRate ]
  lessOften:
    interval: 15s
    perform: [ UpdateProcessesList, CheckMonitors, RecordDiskReadWriteRate]
  seldom:
    interval: 5min
    perform: [ CheckConnectivity ]
  verySeldom:
    interval: 30min
    perform: [ StoreMetricHistoryEntry, CheckUpdate, StoreContainerStatisticsHistoryEntry ]
logReader:
  files: []
  directories:
    - /var/log
    - data
#########################################
### Dropwizard specific configuration ###
#########################################
graphql:
  enableTracing: false
  queryCache: maximumSize=10000
  schemaFiles:
    - schema.graphqls

server:
  maxThreads: 100
  minThreads: 1
  maxQueuedRequests: 100
  idleThreadTimeout: 1 minute
  rootPath: /api/
  adminConnectors: []
  applicationContextPath: /
  requestLog:
    appenders:
      - type: file
        threshold: INFO
        currentLogFilename: data/request.log
        archivedLogFilenamePattern: data/request-%d{yyyy-MM-dd}-%i.log
        archivedFileCount: 3
        timeZone: UTC
        maxFileSize: 2MiB
  applicationConnectors:
    - type: http
      port: 8080
    - type: https
      port: 8443
      keyStorePath: data/keystorewww.jks
      keyStorePassword: sys-api
      certAlias: sys-api-key
      validateCerts: false
      validatePeers: false
logging:
  # The default level of all loggers.
  # Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: WARN
  # Logger-specific levels.
  loggers:
    # Sets the level for 'com.example.app' to DEBUG.
    com.krillsson.sysapi: INFO
    oshi: WARN
    io.dropwizard.core.server.ServerFactory: INFO
    org.eclipse.jetty.server.Server: INFO
    io.dropwizard.core.setup.AdminEnvironment: OFF
  appenders:
    - type: console
    - type: file
      threshold: INFO
      logFormat: '%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg%n'
      currentLogFilename: data/application.log
      archivedLogFilenamePattern: data/application-%d{yyyy-MM-dd}-%i.log
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 2MiB